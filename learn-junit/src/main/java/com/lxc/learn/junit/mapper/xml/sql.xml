<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">

    <!-- 一对一 -->
    <resultMap id="BaseResultMap" type="com.lxc.learn.junit.entity.User">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="nick_name" property="nickName" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />

        <!--关联属性-->
        <association property="userExtend" javaType="com.lxc.learn.junit.entity.UserExtend">
            <id column="id" property="id" />
            <result column="user_id" property="userId" />
            <result column="province" property="province" />
            <result column="city" property="city" />
            <result column="area" property="area" />
            <result column="detail_adress" property="detailAdress" />
            <result column="signature" property="signature" />
        </association>
    </resultMap>

    <select id="getUserDetail" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select * from user a
        left join user_extend b on a.id = b.user_id
        where a.id = #{id}
    </select>


    <!--一对多 -->
    <resultMap type="com.lxc.learn.junit.resp.OrderDetailResp" id="OrderDetailRespResultMap">
        <result column="id" property="id" />
        <result column="amount" property="amount" />
        <result column="pay_state" property="payState" />
        <result column="order_status" property="orderStatus" />
        <result column="buyer" property="buyer" />
        <result column="sys_add_time" property="sysAddTime" />
        <result column="sys_upd_time" property="sysUpdTime" />
        <result column="sys_del_time" property="sysDelTime" />
        <result column="sys_add_user" property="sysAddUser" />
        <result column="sys_upd_user" property="sysUpdUser" />
        <result column="sys_del_user" property="sysDelUser" />
        <result column="sys_del_state" property="sysDelState" />

        <!--关联属性-->
        <!--  <association property="teacher" javaType="com.lcb.user.Teacher">
              <id property="id" column="t_id"/>
              <result property="name" column="t_name"/>
          </association>-->

        <!--一对多-->
        <collection property="orderItems" ofType="com.lxc.learn.junit.entity.OrderItem">
            <result column="id" property="id" />
            <result column="order_id" property="orderId" />
            <result column="product_name" property="productName" />
            <result column="product_id" property="productId" />
            <result column="sku_id" property="skuId" />
            <result column="price" property="price" />
            <result column="count" property="count" />
            <result column="sys_add_time" property="sysAddTime" />
            <result column="sys_upd_time" property="sysUpdTime" />
            <result column="sys_del_time" property="sysDelTime" />
            <result column="sys_add_user" property="sysAddUser" />
            <result column="sys_upd_user" property="sysUpdUser" />
            <result column="sys_del_user" property="sysDelUser" />
            <result column="sys_del_state" property="sysDelState" />
        </collection>
    </resultMap>


    <!--动态sql where -->

    <select id="dynamic" resultMap="BaseResultMap">
        select * from user
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name #{name}
            </if>
        </where>

        <!--
        where 元素只会在至少有一个子元素的条件返回 SQL 子句的情况下才去插入“WHERE”子句。而且，若语句的开头为“AND”或“OR”，where 元素也会将它们去除。
        -->

     <!--
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            ...
        </trim>
     prefix：前缀，
        prefixoverride：去掉第一个“and”或者是“or”
        “trim”标签还有其他属性，
        suffixoverride：去掉最后标记的字符（就像是上面的and一样）
        suffix：后缀 -->
    </select>


    <!--动态sql set
      set 标签元素主要是用在更新操作的时候，它的主要功能和 where 标签元素其实是差不多的，主要是在包含的语句前输出一个 set，然后如果包含的语句是以逗号结束的话将会把该逗号忽略
     -->
    <update id="dynamicSetTest" parameterType="Blog">
        update t_blog
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="owner != null">
                owner = #{owner}
            </if>
        </set>
        where id = #{id}
    </update>


    <!--  choose标签是按顺序判断其内部when标签中的test条件出否成立，如果有一个成立，
    则 choose 结束。当 choose 中所有 when 的条件都不满则时，则执行 otherwise 中的sql。
    类似于Java 的 switch 语句，choose 为 switch，when 为 case，otherwise 则为 default。
 -->


    <select id="selectControlTableColumnByTableColumnIdAndIsUpdateOrIsDelete"  parameterType="com.uama.mdm.model.mdata.MdControlTableColumn" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_list"></include>
        FROM md_control_table_column u
        <where>
            <choose>
                <when test="isUpdate !=null ">
                    AND u.is_update = #{isUpdate, jdbcType=INTEGER}
                </when>
                <when test="isDelete != null">
                    AND u.is_delete = #{isDelete, jdbcType=INTEGER}
                </when>
                <otherwise>
                </otherwise>
            </choose>
            <if test="tableColumnId != null">
                AND table_column_id = #{tableColumnId}
            </if>
        </where>
    </select>
</mapper>
